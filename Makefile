.PHONY: help install run clean test

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "  %-15s %s\n", $$1, $$2}'

install: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	@echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
	pip install -r requirements.txt

setup: ## –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–æ–µ–∫—Ç (—Å–æ–∑–¥–∞—Ç—å .env —Ñ–∞–π–ª)
	@echo "‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞..."
	@if [ ! -f .env ]; then \
		cp .env.example .env; \
		echo "‚úÖ –°–æ–∑–¥–∞–Ω .env —Ñ–∞–π–ª. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –µ–≥–æ –∏ –¥–æ–±–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞."; \
	else \
		echo "‚ÑπÔ∏è  .env —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç."; \
	fi

run: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
	@echo "ü§ñ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞..."
	python run.py

run-direct: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –Ω–∞–ø—Ä—è–º—É—é (–±–µ–∑ .env)
	@echo "ü§ñ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –Ω–∞–ø—Ä—è–º—É—é..."
	python armodels_bot.py

clean: ## –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞..."
	rm -rf __pycache__
	rm -rf *.pyc
	rm -rf .pytest_cache
	rm -rf .coverage

test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã
	@echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..."
	python -m pytest

lint: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥ –Ω–∞ –æ—à–∏–±–∫–∏
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞..."
	python -m flake8 armodels_bot.py || echo "flake8 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É"

format: ## –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥
	@echo "üíÖ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞..."
	python -m black armodels_bot.py || echo "black –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"

deps: ## –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞
	@echo "üìã –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞:"
	@cat requirements.txt

env: ## –ü–æ–∫–∞–∑–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
	@echo "üîê –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:"
	@if [ -f .env ]; then \
		grep -v '^#' .env | grep -v '^$$'; \
	else \
		echo "‚ùå .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ —Å –ø–æ–º–æ—â—å—é 'make setup'"; \
	fi

status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞
	@echo "üìä –°—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞:"
	@echo "Python version: $$(python --version)"
	@echo ".env —Ñ–∞–π–ª: $$(if [ -f .env ]; then echo "‚úÖ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"; else echo "‚ùå –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"; fi)"
	@echo "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: $$(if python -c "import telegram, bs4, requests" 2>/dev/null; then echo "‚úÖ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"; else echo "‚ùå –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"; fi)"
	@echo "–¢–æ–∫–µ–Ω –±–æ—Ç–∞: $$(if [ -n "$$TELEGRAM_BOT_TOKEN" ]; then echo "‚úÖ –∑–∞–¥–∞–Ω"; else echo "‚ùå –Ω–µ –∑–∞–¥–∞–Ω"; fi)"

# –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø—Ä–∞–≤–∫—É
.DEFAULT_GOAL := help